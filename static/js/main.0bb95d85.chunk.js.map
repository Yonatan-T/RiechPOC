{"version":3,"sources":["Test/ListItems.jsx","Test/Title.jsx","Test/Chart.jsx","Test/Deposits.jsx","Test/Orders.jsx","Test/Main.jsx","Pages/Customers/CustomerCard.jsx","Resources/SupaBase.js","Pages/Customers/NewCustomer.jsx","Pages/Customers/Customers.jsx","Pages/Orders/OrderItem.jsx","Pages/Order/OrderProduct.jsx","Pages/Order/NewOrder.jsx","Pages/Orders/Orders.jsx","Components/SaveFab.jsx","Pages/Order/Order.jsx","Pages/Products/ProdcutBox.jsx","Pages/Products/ProductEdit.jsx","Pages/Products/Products.jsx","Pages/Services/ServiceBox.jsx","Pages/Services/ServiceEdit.jsx","Pages/Services/Services.jsx","Components/Icons/ProcessIcon.jsx","Pages/Process/Process.jsx","Test/DashboardTest.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainListItems","history","useHistory","ListItem","button","onClick","_","push","Tooltip","title","arrow","placement","ListItemIcon","ListItemText","primary","SvgIcon","fill","height","width","d","SecondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","undefined","Chart","useTheme","Fragment","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","className","Link","href","id","date","name","shipTo","paymentMethod","rows","theme","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","Copyright","to","Date","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Main","fixedHeightPaper","clsx","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","minWidth","fontSize","CustomerCard","customer","handleOpen","avatarLetter","last_name","toUpperCase","Card","CardContent","Avatar","first_name","company_name","pos","phone_1","phone_2","CardActions","Button","supabase","createClient","customerObject","email","street","house","floor","city","state","zip","notes","NewCustomer","onClose","open","customerId","useState","setCustomer","useEffect","fetchExistingCustomer","a","from","select","eq","data","error","console","log","handleSave","obj","Object","keys","reduce","result","key","update","match","failed","insert","alert","handleCancel","Dialog","e","r","DialogTitle","DialogContent","sm","TextField","required","fullWidth","label","autoFocus","onChange","x","target","value","multiline","DialogActions","control","searchContainer","marginBottom","InputField","margin","fixedButton","top","right","bottom","left","Customers","customersList","setCustomersList","loading","setLoading","openDialog","setOpenDialog","customerEditId","setCustomerEditId","fetchCustomers","progress","style","textAlign","Fade","in","unmountOnExit","CircularProgress","Fab","placeholder","_customer","palette","text","secondary","avatar","backgroundColor","grey","avatarContainer","down","itemContainer","baseline","alignSelf","inline","inlineRight","backButton","primaryButton","OrderItem","order","custom_order_number","price","toFixed","Chip","icon","media","expand","transform","shortest","expandOpen","red","list","background","OrderProduct","orderItem","React","expanded","setExpanded","events","setEvents","ascending","fetchEvents","product","disableSpacing","IconButton","Collapse","timeout","List","dense","Services","ListItemSecondaryAction","Checkbox","edge","checked","Divider","NewOrder","handleClose","customers","setCustomers","setOrder","orderItems","setOrderItems","tempOrderItem","setTempOrderItem","fieldError","setFieldError","stage","setStage","products","setProducts","length","fetchProducts","handleChange","addItem","product_id","prev","save","newOrder","items","order_id","clearData","scroll","DialogContentText","FormControl","InputLabel","Select","displayEmpty","customer_id","defaultValue","MenuItem","type","expected_at","FormControlLabel","expedite","sx","gridGap","index","elevation","splice","removeItem","cursor","fontWeight","find","minHeight","valid","every","orders","setOrders","openNewOrder","setOpenNewOrder","fetchOrders","SaveFab","success","calsses","progressStyle","green","orderObject","completed_at","delivered_at","Order","useParams","customerList","setCustomerList","saving","setSaving","saved","setSaved","timer","useRef","fetchOrder","fetchOrderItems","clearTimeout","current","window","setTimeout","inserted_at","toDateString","split","textField","box","actionButtom","textTransform","alignRight","ProdcutBox","productObject","ProductEdit","editId","setProduct","fetchExistingProduct","Products","productEditId","setProductEditId","ServiceBox","service","serviceObject","ServiceEdit","setService","fetchExistingService","services","setServices","serviceEditId","setServiceEditId","fetchServices","ProcessIcon","Process","setError","employees","setEmployees","itemId","setItemId","serviceId","setServiceId","employeeId","setEmployeeId","fetchEmployees","order_item_id","service_id","employee_id","message","includes","disabled","Dashboard","setOpen","basename","CssBaseline","AppBar","Toolbar","noWrap","Badge","badgeContent","Drawer","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bb95d85.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { SvgIcon, Tooltip } from '@material-ui/core';\r\n\r\n\r\n\r\nexport const MainListItems = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <ListItem button onClick={_ => history.push('/')}>\r\n        <Tooltip title='Dashboard' arrow placement='right'>\r\n          <ListItemIcon>\r\n            <DashboardIcon />\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button onClick={_ => history.push('/Orders')}>\r\n        <Tooltip title='Orders' arrow placement='right'>\r\n          <ListItemIcon>\r\n            <ShoppingCartIcon />\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Orders\" />\r\n      </ListItem>\r\n      <ListItem button onClick={_ => history.push('/customers')}>\r\n        <Tooltip title='Customers' arrow placement='right'>\r\n          <ListItemIcon>\r\n            <PeopleIcon />\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Customers\" />\r\n      </ListItem>\r\n      <ListItem button onClick={_ => history.push('/process')}>\r\n        <Tooltip title='Process' arrow placement='right'>\r\n          <ListItemIcon>\r\n            <SvgIcon>\r\n              <g><rect fill=\"none\" height=\"24\" width=\"24\" /></g><g><g><path d=\"M11,8v5l4.25,2.52l0.77-1.28l-3.52-2.09V8H11z M21,10V3l-2.64,2.64C16.74,4.01,14.49,3,12,3c-4.97,0-9,4.03-9,9 s4.03,9,9,9s9-4.03,9-9h-2c0,3.86-3.14,7-7,7s-7-3.14-7-7s3.14-7,7-7c1.93,0,3.68,0.79,4.95,2.05L14,10H21z\" /></g></g>\r\n            </SvgIcon>\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Process\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport const SecondaryListItems = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <ListSubheader inset>Managment</ListSubheader>\r\n      <ListItem button onClick={_ => history.push('/Products')}>\r\n        <Tooltip title='Products' arrow placement='right'>\r\n          <ListItemIcon>\r\n            {/* <AssignmentIcon /> */}\r\n            <SvgIcon ><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M20 2H4c-1 0-2 .9-2 2v3.01c0 .72.43 1.34 1 1.69V20c0 1.1 1.1 2 2 2h14c.9 0 2-.9 2-2V8.7c.57-.35 1-.97 1-1.69V4c0-1.1-1-2-2-2zm-5 12H9v-2h6v2zm5-7H4V4l16-.02V7z\" /></SvgIcon>\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Products\" />\r\n      </ListItem>\r\n      <ListItem button onClick={_ => history.push('/Services')}>\r\n        <Tooltip title='Services' arrow placement='right'>\r\n          <ListItemIcon>\r\n            <SvgIcon>\r\n              <g>\r\n                <g>\r\n                  <g>\r\n                    <path d=\"M21.67,18.17l-5.3-5.3h-0.99l-2.54,2.54v0.99l5.3,5.3c0.39,0.39,1.02,0.39,1.41,0l2.12-2.12 C22.06,19.2,22.06,18.56,21.67,18.17z M18.84,19.59l-4.24-4.24l0.71-0.71l4.24,4.24L18.84,19.59z\" />\r\n                  </g>\r\n                  <g>\r\n                    <path d=\"M17.34,10.19l1.41-1.41l2.12,2.12c1.17-1.17,1.17-3.07,0-4.24l-3.54-3.54l-1.41,1.41V1.71L15.22,1l-3.54,3.54l0.71,0.71 h2.83l-1.41,1.41l1.06,1.06l-2.89,2.89L7.85,6.48V5.06L4.83,2.04L2,4.87l3.03,3.03h1.41l4.13,4.13l-0.85,0.85H7.6l-5.3,5.3 c-0.39,0.39-0.39,1.02,0,1.41l2.12,2.12c0.39,0.39,1.02,0.39,1.41,0l5.3-5.3v-2.12l5.15-5.15L17.34,10.19z M9.36,15.34 l-4.24,4.24l-0.71-0.71l4.24-4.24l0,0L9.36,15.34L9.36,15.34z\" />\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </SvgIcon>\r\n          </ListItemIcon>\r\n        </Tooltip>\r\n        <ListItemText primary=\"Services\" />\r\n      </ListItem>\r\n    </div>)\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from './Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('00:00', 0),\r\n  createData('03:00', 300),\r\n  createData('06:00', 600),\r\n  createData('09:00', 800),\r\n  createData('12:00', 1500),\r\n  createData('15:00', 2000),\r\n  createData('18:00', 2400),\r\n  createData('21:00', 2400),\r\n  createData('24:00', undefined),\r\n];\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Today</Title>\r\n      {/* <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              Sales ($)\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      \r\n      </ResponsiveContainer> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Deposits</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n        $3,024.00\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on 15 March, 2019\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          View balance\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\nfunction preventDefault(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Orders() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Ship To</TableCell>\r\n            <TableCell>Payment Method</TableCell>\r\n            <TableCell align=\"right\">Sale Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className={classes.seeMore}>\r\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\r\n          See more orders\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Chart from './Chart';\r\nimport Deposits from './Deposits';\r\nimport Orders from './Orders';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        width: '100%'\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12} md={8} lg={9}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <Chart />\r\n                            </Paper>\r\n                        </Grid>\r\n                        {/* Recent Deposits */}\r\n                        <Grid item xs={12} md={4} lg={3}>\r\n                            <Paper className={fixedHeightPaper}>\r\n                                <Deposits />\r\n                            </Paper>\r\n                        </Grid>\r\n                        {/* Recent Orders */}\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <Orders />\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {\r\n    makeStyles,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    Avatar\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n\r\n});\r\n\r\nconst CustomerCard = ({ customer, handleOpen }) => {\r\n    const classes = useStyles();\r\n    const avatarLetter = customer.last_name[0].toUpperCase();\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <Avatar>{avatarLetter}</Avatar>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {customer.first_name} {customer.last_name}\r\n                </Typography>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    {customer.company_name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {customer.phone_1 ?? customer.phone_2} {/* todo: format phone*/}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button\r\n                    size=\"small\"\r\n                    onClick={handleOpen}\r\n                >Open</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CustomerCard\r\n","import { createClient } from '@supabase/supabase-js'\r\n\r\n// Create a single supabase client for interacting with your database \r\nexport const supabase = createClient(\"https://ugvgtfkmbdhlmpfirxxr.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzMjQxMTcyMCwiZXhwIjoxOTQ3OTg3NzIwfQ.cKd-AXK9o_QzcXS4RB0kStqPt8zu5hWGQIHGH_qaocc\")","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    TextField,\r\n    Button,\r\n    Grid\r\n} from '@material-ui/core';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { supabase } from '../../Resources/SupaBase';\r\n\r\n\r\nconst customerObject = {\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    company_name: \"\",\r\n    email: \"\",\r\n    phone_1: \"\",\r\n    phone_2: \"\",\r\n    street: \"\",\r\n    house: \"\",\r\n    floor: null,\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: null,\r\n    notes: \"\"\r\n}\r\n\r\n\r\nconst NewCustomer = ({ onClose, open, customerId }) => {\r\n    const [customer, setCustomer] = useState({ ...customerObject })\r\n\r\n\r\n    useEffect(() => {\r\n        if (open && customerId) {\r\n            fetchExistingCustomer();\r\n        }\r\n    }, [open])\r\n\r\n\r\n    const fetchExistingCustomer = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Customers')\r\n            .select()\r\n            .eq('id', customerId)\r\n        console.log(data, error)\r\n        setCustomer(data[0]);\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        let failed;\r\n        if (customerId) {\r\n            const obj = Object.keys(customerObject).reduce((result, key) => ({ ...result, [key]: customer[key] }), {})\r\n            const { data, error } = await supabase\r\n                .from('Customers')\r\n                .update(obj)\r\n                .match({ id: customerId })\r\n            failed = error\r\n        } else {\r\n            const { data, error } = await supabase\r\n                .from('Customers')\r\n                .insert([\r\n                    { ...customer }\r\n                ])\r\n            failed = error\r\n        }\r\n        if (failed)\r\n            alert(\"somting went wrong please contact support\")\r\n\r\n        onClose();  // this is to close the dialog\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setCustomer({ ...customerObject });\r\n        onClose();  // this is to close the dialog\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={(e, r) => handleCancel()} maxWidth='md'>\r\n            <DialogTitle >{customerId ? `Customer # ${customerId}- (Edit)` : `New Customer`}</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"First Name\"\r\n                            autoFocus\r\n                            onChange={x => setCustomer({ ...customer, first_name: x.target.value })}\r\n                            value={customer.first_name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Last Name\"\r\n                            onChange={x => setCustomer({ ...customer, last_name: x.target.value })}\r\n                            value={customer.last_name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Company Name\"\r\n                            onChange={x => setCustomer({ ...customer, company_name: x.target.value })}\r\n                            value={customer.company_name}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Phone 1\"\r\n                            onChange={x => setCustomer({ ...customer, phone_1: x.target.value })}\r\n                            value={customer.phone_1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Phone 2\"\r\n                            onChange={x => setCustomer({ ...customer, phone_2: x.target.value })}\r\n                            value={customer.phone_2}\r\n                        >{ }</TextField>\r\n                    </Grid><Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Email Address\"\r\n                            onChange={x => setCustomer({ ...customer, email: x.target.value })}\r\n                            value={customer.email}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Street\"\r\n                            onChange={x => setCustomer({ ...customer, street: x.target.value })}\r\n                            value={customer.street}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"House\"\r\n                            onChange={x => setCustomer({ ...customer, house: x.target.value })}\r\n                            value={customer.house}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={3}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Floor\"\r\n                            onChange={x => setCustomer({ ...customer, floor: x.target.value })}\r\n                            value={customer.floor}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"City\"\r\n                            onChange={x => setCustomer({ ...customer, city: x.target.value })}\r\n                            value={customer.city}\r\n                        >{ }</TextField>\r\n                    </Grid><Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"State\"\r\n                            onChange={x => setCustomer({ ...customer, state: x.target.value })}\r\n                            value={customer.state}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            label=\"Zip\"\r\n                            onChange={x => setCustomer({ ...customer, zip: x.target.value })}\r\n                            value={customer.zip}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline={true}\r\n                            label=\"Notes\"\r\n                            onChange={x => setCustomer({ ...customer, notes: x.target.value })}\r\n                            value={customer.notes}\r\n                        >{ }</TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    onClick={handleCancel}\r\n                    color=\"primary\" variant='outlined'>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleSave} color=\"primary\" variant='contained'>\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default NewCustomer\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Fab,\r\n    Fade,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CustomerCard from './CustomerCard';\r\nimport NewCustomer from './NewCustomer';\r\nimport { supabase } from '../../Resources/SupaBase';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // flexGrow: 1,\r\n    },\r\n    control: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    content: {\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    searchContainer: {\r\n        width: 'auto',\r\n        height: 50,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    InputField: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    fixedButton: {\r\n        margin: 0,\r\n        top: '11vh',\r\n        right: 30,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        position: 'fixed'\r\n    }\r\n}));\r\n\r\nconst Customers = () => {\r\n    const classes = useStyles();\r\n    const [customersList, setCustomersList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [customerEditId, setCustomerEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchCustomers();\r\n    }, [])\r\n\r\n    const fetchCustomers = async () => {\r\n        const { data, error } = await supabase.from('Customers').select();\r\n        setLoading(false);\r\n        setCustomersList(data);\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setCustomerEditId(null);\r\n    }\r\n\r\n    const openEdit = id => {\r\n        setCustomerEditId(id);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    const progress = <div style={{ textAlign: 'center' }}>\r\n        <Fade\r\n            in={loading}\r\n            // style={{ marginTop: '20vh' }}\r\n            unmountOnExit\r\n        >\r\n            <CircularProgress\r\n                style={{\r\n                    marginBottom: 32,\r\n                    width: 100,\r\n                    height: 100\r\n                }}\r\n            />\r\n        </Fade>\r\n    </div>\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Fab className={classes.fixedButton}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={() => setOpenDialog(true)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <Paper className={classes.searchContainer} >\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By name' />\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By Phone Number' />\r\n                </Paper>\r\n                {progress}\r\n                <Grid container className={classes.root} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justifyContent=\"center\" spacing={2}>\r\n                            {customersList.map((_customer) => (\r\n                                <Grid key={_customer.id} item>\r\n                                    <CustomerCard\r\n                                        customer={_customer}\r\n                                        handleOpen={_ => openEdit(_customer.id)}\r\n                                        key={_customer.id} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <NewCustomer open={openDialog} onClose={handleCloseDialog} customerId={customerEditId} />\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default Customers","import {\r\n    makeStyles,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Avatar,\r\n    Typography,\r\n    Chip,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { deepOrange, deepPurple, orange } from '@material-ui/core/colors';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'left',\r\n        color: theme.palette.text.secondary,\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        backgroundColor: theme.palette.grey['200'],\r\n        color: theme.palette.text.primary,\r\n    },\r\n    avatarContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: 0,\r\n            marginBottom: theme.spacing(2)\r\n        }\r\n    },\r\n    itemContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    baseline: {\r\n        alignSelf: 'baseline',\r\n        marginLeft: theme.spacing(4),\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    inline: {\r\n        display: 'inline-block',\r\n        marginLeft: theme.spacing(4),\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: 0\r\n        },\r\n        // verticalAlign: 'text-bottom'\r\n    },\r\n    inlineRight: {\r\n        width: '30%',\r\n        textAlign: 'right',\r\n        marginLeft: 50,\r\n        alignSelf: 'flex-end',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            margin: 0,\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    primaryButton: {\r\n        marginRight: theme.spacing(2)\r\n    }\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst OrderItem = ({ order }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.itemContainer}>\r\n                <div className={classes.avatarContainer}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <ShoppingCartIcon />\r\n                    </Avatar>\r\n                </div>\r\n                <div className={classes.baseline} style={{ margin: 10 }}>\r\n                    <div className={classes.inline}>\r\n                        {/* <Typography style={{ textTransform: 'uppercase' }} color='secondary' gutterBottom>\r\n                            \r\n                        </Typography> */}\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            #{order.id}\r\n                        </Typography>\r\n                        {order.custom_order_number && <Typography variant=\"h6\" gutterBottom>\r\n                            #{order.custom_order_number}\r\n                        </Typography>}\r\n                    </div>\r\n                    <div className={classes.inline}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            {order.customer.first_name} {order.customer.last_name}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.inline}>\r\n                        {/* <Typography style={{ textTransform: 'uppercase' }} color='secondary' gutterBottom>\r\n                            Amount\r\n                        </Typography> */}\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            ${order.price.toFixed(2)}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.inline}>\r\n                        <Chip\r\n                            icon={<AutorenewIcon />}\r\n                            label=\"In Progress\"\r\n                            variant=\"outlined\"\r\n                            color='primary'\r\n                            style={{ backgroundColor: 'green', color: 'white' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginLeft: 'auto' }}>\r\n                    <Button\r\n                        className={classes.primaryButton}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.secondary}\r\n                        onClick={() => history.push(`/order/${order.id}`)}\r\n                    >\r\n                        open\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderItem\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SettingsInputSvideoIcon from '@material-ui/icons/SettingsInputSvideo';\r\nimport { List, ListItem, ListItemText, ListItemAvatar, ListItemSecondaryAction, ListItemIcon, Checkbox, Divider } from '@material-ui/core';\r\nimport { supabase } from '../../Resources/SupaBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n        maxWidth: 275,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    list: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nconst OrderProduct = ({ orderItem }) => {\r\n    // console.log('orderitem:', orderItem)\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [events, setEvents] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (expanded) {\r\n            const fetchEvents = async () => {\r\n                const { data, error } = await supabase\r\n                    .from('Work_Events')\r\n                    .select(`\r\n                            *,\r\n                            Services ( name ),\r\n                            Employees(first_name,last_name)\r\n                        `)\r\n                    .eq('order_item_id', orderItem.id)\r\n                    .order('arrived_at', { ascending: false });\r\n                // console.log('events', data)\r\n                setEvents(data);\r\n            }\r\n            fetchEvents();\r\n        }\r\n    }, [expanded])\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Avatar className={classes.avatar} >\r\n                        {orderItem.product.name[0].toUpperCase()}\r\n                    </Avatar>\r\n                    <div style={{ marginLeft: '2em' }}>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {orderItem.product.name}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            #{orderItem.id}\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                {/* <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                </IconButton> */}\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <List dense className={classes.list}>\r\n                        {events.map((value) => {\r\n                            return (\r\n                                <>\r\n                                    <ListItem key={value} style={{ marginTop: '1em', marginBottom: '1em' }}>\r\n                                        {/* <ListItemAvatar>\r\n                                        <Avatar className={classes.avatar}\r\n                                           \r\n                                        />\r\n                                    </ListItemAvatar> */}\r\n                                        <ListItemIcon>\r\n                                            <SettingsInputSvideoIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={value.Services.name} />\r\n                                        <ListItemSecondaryAction>\r\n                                            <Checkbox\r\n                                                edge=\"end\"\r\n                                                onChange={() => { }}\r\n                                                checked\r\n                                            // checked={checked.indexOf(value) !== -1}\r\n                                            // inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider variant=\"middle\" component=\"li\" />\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default OrderProduct\r\n","import {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Paper,\r\n    Typography,\r\n    IconButton\r\n} from \"@material-ui/core\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Resources/SupaBase\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport OrderProduct from \"./OrderProduct\";\r\n\r\nconst NewOrder = ({ open, handleClose }) => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [order, setOrder] = useState({});\r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [tempOrderItem, setTempOrderItem] = useState(null)\r\n    const [fieldError, setFieldError] = useState(false);\r\n    const [stage, setStage] = useState(1);\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    //effects\r\n    useEffect(() => {\r\n        fetchCustomers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (tempOrderItem && products.length === 0) {\r\n            fetchProducts();\r\n        }\r\n    }, [tempOrderItem])\r\n\r\n    // functions\r\n    const fetchCustomers = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Customers')\r\n            .select(`id,first_name,last_name`)\r\n        setCustomers(data)\r\n    };\r\n    const fetchProducts = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Products')\r\n            .select(`id,name`)\r\n        setProducts(data)\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        console.log(event.target.value ? event.target.value : event.target.checked)\r\n        setOrder({ ...order, [event.target.name]: event.target.value ? event.target.value : event.target.checked });\r\n        console.log(order)\r\n    }\r\n\r\n    const moveToItems = () => {\r\n        if (stage === 1) {\r\n            var valid = [order.customer_id, order.expected_at].every(x => x)\r\n            setFieldError(true);\r\n            if (!valid) return;\r\n        }\r\n        setFieldError(false);\r\n        setStage(prev => prev === 1 ? 2 : 1)\r\n    }\r\n\r\n    const addItem = () => {\r\n        if (!tempOrderItem?.product_id) {\r\n            setFieldError(true)\r\n        } else {\r\n            setOrderItems(prev => [...prev, tempOrderItem])\r\n            setTempOrderItem(null);\r\n            setFieldError(false);\r\n        }\r\n    }\r\n\r\n    const removeItem = (index) => {\r\n        const items = [...orderItems];\r\n        items.splice(index, 1);\r\n        setOrderItems(items)\r\n    }\r\n\r\n    const save = async () => {\r\n        const { data: newOrder, error } = await supabase\r\n            .from('Orders')\r\n            .insert([order])\r\n\r\n        const items = orderItems.map(x => ({ ...x, order_id: newOrder[0].id }))\r\n        const { data: data2, error: error2 } = await supabase\r\n            .from('Order_Items')\r\n            .insert(items)\r\n\r\n        history.push(`/order/${newOrder[0].id}`)\r\n        clearData();\r\n        handleClose();\r\n    };\r\n\r\n    const close = () => {\r\n        clearData();\r\n        handleClose();\r\n    };\r\n\r\n    const clearData = () => {\r\n        setOrder({});\r\n        setOrderItems([]);\r\n        setStage(1);\r\n        setFieldError(false);\r\n    }\r\n\r\n\r\n    const itemsView = () => {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12} >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            gridGap: 8,\r\n                            '& > :not(style)': {\r\n                                width: '100%',\r\n                                height: 128,\r\n                            },\r\n                        }}>\r\n                        {orderItems.map((item, index) => <Paper key={index} elevation={3} style={{ minWidth: '150px', maxWidth: '150px', height: '70px' }} >\r\n                            <div style={{ textAlign: \"right\" }}>\r\n                                <span\r\n                                    onClick={x => removeItem(index)}\r\n                                    style={{ paddingRight: '5px', color: \"lightgray\", cursor: \"pointer\" }}>X</span>\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <span style={{ fontSize: '1.2em', fontWeight: \"bold\" }}>{products.find(x => x.id === item.product_id).name}</span>\r\n                            </div>\r\n                        </Paper>)}\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}   >\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"center\"\r\n                        alignItems=\"center\"\r\n                        width='100%'\r\n                        minHeight='20vh'\r\n                        marginTop='100px'\r\n\r\n                    >\r\n                        <Paper elevation={3} style={{ width: '250px', height: '250px' }} >\r\n                            {!tempOrderItem ? <div style={{ display: \"flex\", justifyContent: \"space-around\", height: '100%', flexDirection: \"column\" }}>\r\n                                <Typography style={{ paddingTop: '1em', textAlign: 'center' }} variant=\"h5\" component=\"h2\" color='primary' >\r\n                                    ADD NEW\r\n                                </Typography>\r\n                                <Typography style={{ textAlign: 'center' }} variant=\"h5\" component=\"h2\" color='primary' >\r\n                                    PRODUCT\r\n                                </Typography>\r\n                                <Typography>\r\n                                </Typography>\r\n                                <IconButton\r\n                                    onClick={() => setTempOrderItem({})}\r\n                                    style={{ backgroundColor: '#f0f0f0', cursor: 'pointer', margin: 'auto', height: '4em', width: '4em', marginTop: '25px' }}>\r\n                                    <AddIcon fontSize='large' color='primary' />\r\n                                </IconButton>\r\n\r\n                            </div> :\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        height: '100%',\r\n                                        flexDirection: \"column\",\r\n                                        justifyContent: \"space-evenly\",\r\n                                        padding: '15px'\r\n                                    }}>\r\n                                    <FormControl fullWidth variant='outlined' >\r\n                                        <InputLabel>\r\n                                            Product\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            error={fieldError}\r\n                                            label='productId'\r\n                                            value={tempOrderItem?.product_id}\r\n                                            name='product_id'\r\n                                            onChange={x => setTempOrderItem(prev => ({ ...prev, product_id: x.target.value }))}\r\n                                        >\r\n                                            <MenuItem value=\"\"></MenuItem>\r\n                                            {products.map(x => <MenuItem key={x.name} value={x.id}> {x.name}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Button\r\n                                        onClick={addItem}\r\n                                        color=\"primary\"\r\n                                        variant='contained'>\r\n                                        ADD\r\n                                    </Button>\r\n                                </div>}\r\n                        </Paper>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid >\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} maxWidth='md' fullWidth scroll='body'>\r\n            <DialogTitle>New order</DialogTitle>\r\n            <DialogContent >\r\n                <DialogContentText>\r\n                    {stage === 1 ?\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={6} >\r\n                                <FormControl fullWidth variant='outlined' error={fieldError}>\r\n                                    <InputLabel  >\r\n                                        Customer Name\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        displayEmpty\r\n                                        label='Customer Name'\r\n                                        name={'customer_id'}\r\n                                        value={order.customer_id}\r\n                                        onChange={handleChange}\r\n                                        defaultValue={0}\r\n                                    >\r\n                                        <MenuItem value={0}></MenuItem>\r\n                                        {customers.map(x => <MenuItem key={x.id} value={x.id}> {x.last_name} {x.first_name}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"Price\"\r\n                                    fullWidth\r\n                                    variant='outlined'\r\n                                    name={'price'}\r\n                                    type='number'\r\n                                    value={order.price}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    error={fieldError}\r\n                                    label=\"Expected at\"\r\n                                    type=\"datetime-local\"\r\n                                    fullWidth\r\n                                    variant='outlined'\r\n                                    name={'expected_at'}\r\n                                    value={order.expected_at}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox\r\n                                        color=\"secondary\"\r\n                                        value={order.expedite}\r\n                                        onClick={_ => setOrder(prev => ({ ...prev, expedite: !order?.expedite }))} />}\r\n                                    label=\"Expedite\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    label=\"Custom Order#\"\r\n                                    fullWidth\r\n                                    variant='outlined'\r\n                                    name={'custom_order_number'}\r\n                                    value={order.custom_order_number}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    label=\"Notes\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    name={'notes'}\r\n                                    value={order.notes}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid> :\r\n                        itemsView()}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant='text'\r\n                    onClick={close}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant='outlined'\r\n                    onClick={moveToItems}>\r\n                    {stage === 1 ? 'Next' : 'back'}\r\n                </Button>\r\n                {stage > 1 && <Button\r\n                    onClick={save}\r\n                    color=\"primary\"\r\n                    variant='contained'>\r\n                    save\r\n                </Button>}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default NewOrder\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Fab,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { supabase } from '../../Resources/SupaBase';\r\nimport OrderItem from './OrderItem';\r\nimport NewOrder from '../Order/NewOrder';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        // flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    searchContainer: {\r\n        width: 'auto',\r\n        height: 50,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        textAlign: 'left',\r\n        color: theme.palette.text.secondary\r\n    },\r\n    avatar: {\r\n        margin: 10,\r\n        backgroundColor: theme.palette.grey['200'],\r\n        color: theme.palette.text.primary,\r\n    },\r\n    avatarContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: 0,\r\n            marginBottom: theme.spacing(4)\r\n        }\r\n    },\r\n    itemContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center'\r\n        }\r\n    },\r\n    baseline: {\r\n        alignSelf: 'baseline',\r\n        marginLeft: theme.spacing(4),\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            textAlign: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            marginTop: theme.spacing(2),\r\n            marginBottom: theme.spacing(2),\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    inline: {\r\n        display: 'inline-block',\r\n        marginLeft: theme.spacing(4),\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    inlineRight: {\r\n        width: '30%',\r\n        textAlign: 'right',\r\n        marginLeft: 50,\r\n        alignSelf: 'flex-end',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            margin: 0,\r\n            textAlign: 'center'\r\n        }\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    fixedButton: {\r\n        margin: 0,\r\n        top: '11vh',\r\n        right: 30,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        position: 'fixed'\r\n    }\r\n}));\r\n\r\nconst Orders = () => {\r\n    const classes = useStyles();\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [openNewOrder, setOpenNewOrder] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchOrders();\r\n    }, [])\r\n\r\n    const fetchOrders = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Orders')\r\n            .select(`*,\r\n            customer:Customers (\r\n                first_name,\r\n                last_name\r\n              )\r\n            `)\r\n            .order('id', { ascending: false });\r\n\r\n        // console.log('orders...', error, data)\r\n        setOrders(data)\r\n    }\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Fab className={classes.fixedButton}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={() => setOpenNewOrder(true)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <Paper className={classes.searchContainer} >\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By name' />\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By Phone Number' />\r\n                </Paper>\r\n                <Grid container justifyContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        {orders.map(x => <OrderItem key={x.id} order={x} />)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <NewOrder open={openNewOrder} handleClose={() => setOpenNewOrder(false)} />\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default Orders\r\n\r\n\r\n","import { green } from '@material-ui/core/colors';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { Box, CircularProgress, Fab, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fixedButton: {\r\n        margin: 0,\r\n        top: '11vh',\r\n        right: 30,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        position: 'fixed'\r\n    }\r\n}));\r\n\r\nexport default function SaveFab({ loading, success, onClick }) {\r\n    const calsses = useStyles();\r\n\r\n    const progressStyle = {\r\n        margin: 0,\r\n        top: '10.2vh',\r\n        right: 23,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        color: green[500],\r\n        position: 'fixed'\r\n    }\r\n    return (\r\n        <>\r\n            <Fab\r\n                aria-label=\"save\"\r\n                color=\"secondary\"\r\n                onClick={onClick}\r\n                className={calsses.fixedButton}\r\n                style={{ backgroundColor: success && green[500] }}\r\n            >\r\n                {success ? <CheckIcon /> : <SaveIcon />}\r\n            </Fab>\r\n            {loading && (\r\n                <CircularProgress\r\n                    size={68}\r\n                    style={progressStyle}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}","import { Grid, makeStyles, Container, Select, FormControl, InputLabel, MenuItem, Button, Fab, Card, CardContent, Avatar } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AsyncAutocomplete from '../../Components/AsyncAutocomplete';\r\nimport CustomerCard from '../Customers/CustomerCard';\r\nimport OrderProduct from './OrderProduct';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { supabase } from '../../Resources/SupaBase';\r\nimport SaveFab from '../../Components/SaveFab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        // flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nconst orderObject = {\r\n    // id: 0,\r\n    customer_id: 0,\r\n    custom_order_number: '',\r\n    completed_at: '',\r\n    delivered_at: '',\r\n    expected_at: '',\r\n    expedite: false,\r\n    notes: '',\r\n    price: '',\r\n}\r\n\r\nconst Order = () => {\r\n    const classes = useStyles();\r\n    let { id } = useParams()\r\n    const [order, setOrder] = useState({ ...orderObject })\r\n    const [customerList, setCustomerList] = useState([]);\r\n    const [orderItems, setOrderItems] = useState([])\r\n    const [saving, setSaving] = useState(false);\r\n    const [saved, setSaved] = useState(false);\r\n    const [showNewItemDialog, setShowNewItemDialog] = useState(false)\r\n    const timer = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        fetchOrder();\r\n        fetchCustomers();\r\n        fetchOrderItems();\r\n\r\n        return () => {\r\n            clearTimeout(timer.current);\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (saved) {\r\n            setSaving(false);\r\n            timer.current = window.setTimeout(() => {\r\n                setSaved(false);\r\n            }, 1500);\r\n        }\r\n    }, [saved])\r\n\r\n    const fetchOrder = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Orders')\r\n            .select(`*`)\r\n            .eq('id', id);\r\n        setOrder(data[0]);\r\n        console.log(data[0])\r\n    }\r\n\r\n    const fetchOrderItems = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Order_Items')\r\n            .select(`*,\r\n            product:Products (\r\n                name\r\n              )\r\n            `)\r\n            .eq('order_id', id);\r\n        console.log('oreder_items')\r\n        console.log(data)\r\n        setOrderItems(data);\r\n    }\r\n\r\n    const fetchCustomers = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Customers')\r\n            .select(`id,first_name,last_name`)\r\n        console.log('customers', data)\r\n        setCustomerList(data)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setOrder({ ...order, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        setSaving(true);\r\n        let failed;\r\n        const obj = Object.keys(orderObject).reduce((result, key) => ({ ...result, [key]: order[key] }), {})\r\n        const { data, error } = await supabase\r\n            .from('Orders')\r\n            .update(obj)\r\n            .match({ id: id })\r\n        failed = error\r\n        setSaved(true);\r\n\r\n        if (failed)\r\n            alert(\"somting went wrong please contact support\")\r\n    };\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '1.5em' }}>\r\n                    <Typography component=\"h1\" variant=\"h5\" >\r\n                        Order # {id}\r\n                    </Typography>\r\n                    <Typography style={{ marginRight: '50px' }} >\r\n                        {new Date(order.inserted_at).toDateString()}\r\n                    </Typography>\r\n                    <SaveFab loading={saving} success={saved} onClick={handleSave} />\r\n                </div>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} >\r\n                        <FormControl fullWidth variant='outlined'>\r\n                            <InputLabel  >\r\n                                Customer Name\r\n                            </InputLabel>\r\n                            <Select\r\n                                displayEmpty\r\n                                label='Customer Name'\r\n                                value={order.customer_id}\r\n                                name={'customer_id'}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"\"></MenuItem>\r\n                                {customerList.map(x => <MenuItem key={x.id} value={x.id}> {x.last_name} {x.first_name}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            label=\"Price\"\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.price}\r\n                            name={'price'}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {/* <AsyncAutocomplete lable='person'/> */}\r\n                    </Grid>\r\n                    {/* <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Created at\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue={new Date(Date.now()).toISOString().split('.')[0]}\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.inserted_at?.split('.')[0]}\r\n                        />\r\n                    </Grid> */}\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Completed at\"\r\n                            type=\"datetime-local\"\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.completed_at?.split('.')[0]}\r\n                            name={'completed_at'}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Delivered at\"\r\n                            type=\"datetime-local\"\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.delivered_at?.split('.')[0]}\r\n                            name={'delivered_at'}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Expected at\"\r\n                            type=\"datetime-local\"\r\n                            className={classes.textField}\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.expected_at?.split('.')[0]}\r\n                            name={'expected_at'}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" value={order.expedite} onClick={_ => setOrder({ ...order, expedite: !order.expedite })} />}\r\n                            label=\"Expedite\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            label=\"Custom Order#\"\r\n                            fullWidth\r\n                            variant='outlined'\r\n                            value={order.custom_order_number}\r\n                            name={'custom_order_number'}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            label=\"Notes\"\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={order.notes}\r\n                            name={'notes'}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{ marginTop: '25px' }}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justifyContent=\"center\" spacing={2} >\r\n                            <Grid item>\r\n                                <Card style={{ minWidth: '275px', height: '100%' }} onClick={_ => alert('add new item...')}>\r\n                                    <CardContent>\r\n                                        <div style={{ display: 'flex', alignItems: 'center', }}>\r\n                                            <Avatar >\r\n                                                +\r\n                                            </Avatar>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            {orderItems.map((value) => (\r\n                                <Grid key={value.id} item>\r\n                                    <OrderProduct key={value.id} orderItem={value} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Order\r\n","import { Button, Paper, Typography, makeStyles } from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        textAlign: \"left\",\r\n        color: theme.palette.text.secondary\r\n    },\r\n    box: {\r\n        marginBottom: 40,\r\n        // height: 65\r\n        maxWidth: '250px'\r\n    },\r\n    actionButtom: {\r\n        textTransform: \"uppercase\",\r\n        margin: theme.spacing(1),\r\n        // width: 152\r\n    },\r\n    alignRight: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}));\r\n\r\n\r\nconst ProdcutBox = ({ product, handleOpen }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.box}>\r\n                <Typography\r\n                    style={{ textTransform: \"uppercase\", textAlign: 'center' }}\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"h6\"\r\n                >\r\n                    {product.name}\r\n                </Typography>\r\n\r\n            </div>\r\n            <div className={classes.alignRight}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    className={classes.actionButtom}\r\n                >\r\n                    delete\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    className={classes.actionButtom}\r\n                    onClick={handleOpen}\r\n                >\r\n                    edit\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ProdcutBox\r\n","import {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    TextField,\r\n    DialogActions,\r\n    Button\r\n} from \"@material-ui/core\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { supabase } from \"../../Resources/SupaBase\"\r\n\r\nconst productObject = {\r\n    name: ''\r\n}\r\n\r\nconst ProductEdit = ({ onClose, open, editId }) => {\r\n    const [product, setProduct] = useState({ ...productObject })\r\n\r\n    useEffect(() => {\r\n        if (open && editId)\r\n            fetchExistingProduct();\r\n    }, [open])\r\n\r\n    const fetchExistingProduct = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Products')\r\n            .select()\r\n            .eq('id', editId)\r\n        setProduct(data[0]);\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        let failed;\r\n        if (editId) {\r\n            const obj = Object.keys(productObject).reduce((result, key) => ({ ...result, [key]: product[key] }), {})\r\n            const { data, error } = await supabase\r\n                .from('Products')\r\n                .update(obj)\r\n                .match({ id: editId })\r\n            failed = error\r\n        } else {\r\n            const { data, error } = await supabase\r\n                .from('Products')\r\n                .insert([\r\n                    { ...product }\r\n                ])\r\n            failed = error\r\n        }\r\n        if (failed)\r\n            alert(\"somting went wrong please contact support\")\r\n\r\n        onClose();  // this is to close the dialog\r\n    }\r\n    const handleCancel = () => {\r\n        setProduct({ ...productObject })\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleCancel} maxWidth='md'>\r\n            <DialogTitle >Product {editId && ` (${editId})`}</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item >\r\n                        <TextField\r\n                            name=\"Name\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            value={product.name}\r\n                            onChange={x => setProduct({ ...product, name: x.target.value })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCancel} color=\"primary\" variant='outlined'>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleSave} color=\"primary\" variant='contained'>\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ProductEdit\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Fab\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ProdcutBox from './ProdcutBox';\r\nimport ProductEdit from './ProductEdit';\r\nimport { supabase } from '../../Resources/SupaBase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    fixedButton: {\r\n        margin: 0,\r\n        top: '11vh',\r\n        right: 30,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        position: 'fixed'\r\n    }\r\n}));\r\n\r\n\r\nconst Products = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([])\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [productEditId, setProductEditId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Products')\r\n            .select();\r\n\r\n        console.log('products:',data)\r\n\r\n        setProducts(data);\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setProductEditId(null);\r\n        fetchProducts();\r\n    }\r\n\r\n    const openEdit = id => {\r\n        setProductEditId(id);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Fab className={classes.fixedButton}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={() => setOpenDialog(true)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                {/* <Paper className={classes.searchContainer} >\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By name' />\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By Phone Number' />\r\n                </Paper> */}\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justifyContent=\"center\" spacing={2}>\r\n                            {products.map((x) => (\r\n                                <Grid key={x} item>\r\n                                    <ProdcutBox key={x.id} product={x} handleOpen={_ => openEdit(x.id)}/>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <ProductEdit open={openDialog} onClose={handleCloseDialog} editId={productEditId} />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import { Button, Paper, Typography, makeStyles } from \"@material-ui/core\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        textAlign: \"left\",\r\n        color: theme.palette.text.secondary\r\n    },\r\n    box: {\r\n        marginBottom: 40,\r\n        // height: 65\r\n        maxWidth:'250px'\r\n    },\r\n    actionButtom: {\r\n        textTransform: \"uppercase\",\r\n        margin: theme.spacing(1),\r\n        // width: 152\r\n    },\r\n    alignRight: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}));\r\n\r\n\r\nconst ServiceBox = ({ service, handleOpen }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.box}>\r\n                <Typography\r\n                    style={{ textTransform: \"uppercase\", textAlign: 'center' }}\r\n                    color=\"textPrimary\"\r\n                    gutterBottom\r\n                    variant=\"h6\"\r\n                >\r\n                    {service.name}\r\n                </Typography>\r\n               \r\n            </div>\r\n            <div className={classes.alignRight}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    className={classes.actionButtom}\r\n                >\r\n                    delete\r\n                </Button>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    className={classes.actionButtom}\r\n                    onClick={handleOpen}\r\n                >\r\n                    edit\r\n                </Button>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default ServiceBox\r\n","import { useState, useEffect } from \"react\"\r\n\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    TextField,\r\n    DialogActions,\r\n    Button\r\n} from \"@material-ui/core\"\r\nimport { supabase } from \"../../Resources/SupaBase\"\r\n\r\n\r\n\r\nconst serviceObject = {\r\n    name: ''\r\n}\r\nconst ServiceEdit = ({ onClose, open, editId }) => {\r\n    const [service, setService] = useState({ ...serviceObject })\r\n\r\n    useEffect(() => {\r\n        if (open && editId)\r\n            fetchExistingService();\r\n    }, [open])\r\n\r\n    const fetchExistingService = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Services')\r\n            .select()\r\n            .eq('id', editId)\r\n        setService(data[0]);\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        let failed;\r\n        if (editId) {\r\n            const obj = Object.keys(serviceObject).reduce((result, key) => ({ ...result, [key]: service[key] }), {})\r\n            const { data, error } = await supabase\r\n                .from('Services')\r\n                .update(obj)\r\n                .match({ id: editId })\r\n            failed = error\r\n        } else {\r\n            const { data, error } = await supabase\r\n                .from('Services')\r\n                .insert([\r\n                    { ...service }\r\n                ])\r\n            failed = error\r\n        }\r\n        if (failed)\r\n            alert(\"somting went wrong please contact support\")\r\n\r\n        onClose();  // this is to close the dialog\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setService({ ...serviceObject })\r\n        onClose();\r\n    }\r\n    \r\n    return (\r\n        <Dialog open={open} onClose={handleCancel} maxWidth='md'>\r\n            <DialogTitle >Service {editId && `-- ${editId}`}</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container spacing={2}>\r\n                    <Grid item >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"Name\"\r\n                            autoFocus\r\n                            value={service.name}\r\n                            onChange={x => setService({ ...service, name: x.target.value })}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCancel} color=\"primary\" variant='outlined'>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleSave} color=\"primary\" variant='contained'>\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ServiceEdit\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    makeStyles,\r\n    Container,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n    Fab\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ServiceBox from './ServiceBox';\r\nimport ServiceEdit from './ServiceEdit';\r\nimport { supabase } from '../../Resources/SupaBase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    fixedButton: {\r\n        margin: 0,\r\n        top: '11vh',\r\n        right: 30,\r\n        bottom: 'auto',\r\n        left: 'auto',\r\n        position: 'fixed'\r\n    }\r\n}));\r\n\r\n\r\nconst Services = () => {\r\n    const classes = useStyles();\r\n    const [services, setServices] = useState([])\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [serviceEditId, setServiceEditId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n    }, [])\r\n\r\n    const fetchServices = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Services')\r\n            .select();\r\n\r\n        setServices(data);\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false);\r\n        setServiceEditId(null);\r\n        fetchServices();\r\n    }\r\n\r\n    const openEdit = id => {\r\n        setServiceEditId(id);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Fab className={classes.fixedButton}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    onClick={() => setOpenDialog(true)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                {/* <Paper className={classes.searchContainer} >\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By name' />\r\n                    <TextField className={classes.InputField} size=\"small\" placeholder='search By Phone Number' />\r\n                </Paper> */}\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container justifyContent=\"center\" spacing={2}>\r\n                            {services.map((x) => (\r\n                                <Grid key={x.id} item>\r\n                                    <ServiceBox key={x.id} service={x} handleOpen={_ => openEdit(x.id)} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <ServiceEdit open={openDialog} onClose={handleCloseDialog} editId={serviceEditId} />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","import { SvgIcon } from \"@material-ui/core\"\r\n\r\nconst ProcessIcon = () => {\r\n    return (\r\n        <SvgIcon>\r\n            <g><rect fill=\"none\" /></g><g><g><path d=\"M11,8v5l4.25,2.52l0.77-1.28l-3.52-2.09V8H11z M21,10V3l-2.64,2.64C16.74,4.01,14.49,3,12,3c-4.97,0-9,4.03-9,9 s4.03,9,9,9s9-4.03,9-9h-2c0,3.86-3.14,7-7,7s-7-3.14-7-7s3.14-7,7-7c1.93,0,3.68,0.79,4.95,2.05L14,10H21z\"/></g></g>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default ProcessIcon\r\n","import { Grid, makeStyles, Container, Select, FormControl, InputLabel, MenuItem, Button, Fab, Card, CardContent, Avatar, Box, Link } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { supabase } from '../../Resources/SupaBase';\r\nimport ProcessIcon from '../../Components/Icons/ProcessIcon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        // flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n}));\r\n\r\nconst Process = () => {\r\n    const classes = useStyles();\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [saved, setSaved] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n\r\n    const [services, setServices] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n\r\n    const [itemId, setItemId] = useState('')\r\n    const [serviceId, setServiceId] = useState(null);\r\n    const [employeeId, setEmployeeId] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n        fetchEmployees();\r\n    }, [])\r\n\r\n    const fetchServices = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Services')\r\n            .select(`id,name`)\r\n        console.log('Services', data)\r\n        setServices(data);\r\n    };\r\n\r\n    const fetchEmployees = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Employees')\r\n            .select(`id,first_name,last_name`)\r\n        console.log('Employees', data)\r\n        setEmployees(data);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        // setOrder({ ...order, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        setError('');\r\n        if (!itemId || !serviceId) {\r\n            setError('please fill all requierd fields');\r\n            return;\r\n        }\r\n        setSaving(true);\r\n        let failed;\r\n        const { data, error } = await supabase\r\n            .from('Work_Events')\r\n            .insert([\r\n                { order_item_id: itemId, service_id: serviceId, employee_id: employeeId }\r\n            ])\r\n        console.log(error)\r\n        failed = error\r\n        setSaved(true);\r\n\r\n        if (failed) {\r\n            if (error.message.includes('Work_Events_order_item_id_fkey')) {\r\n                setError('invalid item #')\r\n            } else {\r\n                setError(error.message)\r\n            }\r\n        } else {\r\n            setSaved(true)\r\n            setTimeout(() => {\r\n                setSaved(false);\r\n            }, 1500);\r\n\r\n            setItemId('');\r\n            setServiceId(null);\r\n            setEmployeeId(null);\r\n        }\r\n        setSaving(false)\r\n    };\r\n\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"xs\" className={classes.container}>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar variant='circle' style={{ height: '56px', width: '56px' }}>\r\n                        <ProcessIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\" style={{ marginTop: '1em' }} >\r\n                        Process center\r\n                    </Typography>\r\n                    <Box\r\n                        style={{ marginTop: '3em' }}\r\n                    >\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    name=\"itemId\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"itemId\"\r\n                                    label=\"Item #\"\r\n                                    autoFocus\r\n                                    variant='outlined'\r\n                                    onChange={x => setItemId(x.target.value)}\r\n                                    value={itemId}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth variant='outlined'>\r\n                                    <InputLabel  >\r\n                                        Service *\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        label='Service'\r\n                                        value={serviceId}\r\n                                        name='serviceId'\r\n                                        onChange={x => setServiceId(x.target.value)}\r\n                                    >\r\n                                        <MenuItem value=\"\"></MenuItem>\r\n                                        {services.map(x => <MenuItem key={x.id} value={x.id}> {x.name}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth variant='outlined'>\r\n                                    <InputLabel  >\r\n                                        Employee\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        displayEmpty\r\n                                        label='Employee'\r\n                                        value={employeeId}\r\n                                        name='employeeId'\r\n                                        onChange={x => setEmployeeId(x.target.value)}\r\n                                    >\r\n                                        <MenuItem value=\"\"></MenuItem>\r\n                                        {employees.map(x => <MenuItem key={x.id} value={x.id}> {x.name}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color='primary'\r\n                            style={{ marginTop: '3em' }}\r\n                            onClick={handleSave}\r\n                            disabled={saving}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                        {error && <Typography component=\"h1\" variant=\"h5\" style={{ marginTop: '1em', color: 'red' }} >\r\n                            {error}\r\n                        </Typography>}\r\n                        {saved && <Typography component=\"h1\" variant=\"h5\" style={{ marginTop: '1em', color: 'green', textAlign: 'center' }} >\r\n                            Updated Successfuly !\r\n                        </Typography>}\r\n                    </Box>\r\n                </Box>\r\n            </Container>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Process\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { MainListItems, SecondaryListItems } from './ListItems';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Chart from './Chart';\r\nimport Deposits from './Deposits';\r\n// import Orders from './Orders';\r\nimport Main from './Main';\r\nimport Customers from '../Pages/Customers/Customers';\r\nimport Orders from '../Pages/Orders/Orders';\r\nimport Order from '../Pages/Order/Order';\r\nimport Products from '../Pages/Products/Products';\r\nimport Services from '../Pages/Services/Services';\r\nimport Process from '../Pages/Process/Process';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <switch>       {/* this switch is for the router.. */}\r\n      <div className={classes.root}>\r\n        <Router basename='/RiechPOC'>\r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n            <Toolbar className={classes.toolbar}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Amur Designs\r\n              </Typography>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={4} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n            }}\r\n            open={open}\r\n          >\r\n            <div className={classes.toolbarIcon}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List><MainListItems/></List>\r\n            <Divider />\r\n            <List><SecondaryListItems/></List>\r\n          </Drawer>\r\n          {/* content */}\r\n          <Route path='/' exact component={Main} />\r\n          <Route path='/customers' component={Customers} />\r\n          <Route path='/Orders' component={Orders} />\r\n          <Route path='/Order/:id' component={Order} />\r\n          <Route path='/products' component={Products} />\r\n          <Route path='/services' component={Services} />\r\n          <Route path='/Process' component={Process} />\r\n        </Router>\r\n      </div>\r\n    </switch>\r\n  );\r\n}\r\n","import DashboardTest from './Test/DashboardTest' \n\nfunction App() {\n  return (\n    <div>\n      <DashboardTest/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}